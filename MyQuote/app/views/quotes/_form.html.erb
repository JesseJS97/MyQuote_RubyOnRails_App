<!-- This will display errors related to both the Recipe and its nested RecipeIngredients -->
<% if @quote.errors.any? %>
  <div class="alert alert-danger">
    <ul>
      <% @quote.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
    </ul>
  </div>
<% end %>

<%= form_with(model: @quotes, url: quotes_path, method: :post, local: true) do |f| %>
  <!-- Hidden field for user_id -->
  <%= f.hidden_field :user_id, value: current_user.id %>

  <!-- Form fields associated with the quotes table -->
  <div class="form-group" style="padding-bottom: 10px;">
    <%= f.text_field :quote_txt, placeholder: 'Quote Text', class: 'form-control' %>
  </div>

  <div class="form-group" style="padding-bottom: 10px;">
    <%= f.text_area :user_comm, placeholder: 'User Comment', class: 'form-control' %>
  </div>


  <div class="form-check" style="padding-bottom: 10px;">
    <%= f.label :is_public do %>
    Public
    <%= f.check_box :is_public, class: "form-check-input" %>
    <% end %>
  </div>
  
  #OpenAI.(2024).Container syntax [AI-generated .txt file]. Generated using ChatGPT, provided by OpenAI.
  <!-- Container for the quote's categories -->
  <div id="categories-container">
    <!-- Loop through each of the quote's categories -->
    <% @quote.quote_categories.each do |quote_category| %>
      <%= f.fields_for :quote_categories, quote_category do |qc| %>
        <div class="category-field row mb-2">
          <div class="col-auto">
            <!-- Dropdown list for selecting a category -->
            <%= qc.label :category_id, "Category", class: "form-label d-inline-block me-2" %>
            <%= qc.select :category_id, Category.all.collect { |cat| [cat.cat_name, cat.id] }, { include_blank: true }, class: "form-control d-inline-block" %>
          </div>
          <div class="col-auto">
            <!-- Quantity or other related field if needed -->
            <%= qc.label :cat_quantity, "Quantity", class: "form-label d-inline-block me-2" %>
            <%= qc.text_field :cat_quantity, class: "form-control d-inline-block" %>
          </div>
          <div class="col-auto align-self-end">
            <!-- Link to remove this category row -->
            <%= link_to '[-] Remove this category', '#', class: 'remove-category', style: "color: red; text-decoration: none;" %>
          </div>
        </div>
      <% end %>
    <% end %>
  </div>

  <div class="mt-3">
    <%= f.submit 'Create Quote', class: 'btn btn-primary btn-lg' %>
  </div>
<% end %>

<script>
// Wait for the document to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
  // Attach an event listener to detect clicks on the "Remove this quote" link
  document.addEventListener('click', function(e) {
    if (e.target && e.target.classList.contains('remove-quote')) {
      // Prevent the default action of the link
      e.preventDefault();

      // Get all the quote fields
      const quoteFields = document.querySelectorAll('.quote-field');
      // Only remove an quote field if there's more than one
      if (quoteFields.length > 1) {
        e.target.closest('.quote-field').remove();
      }
    }
  });
});
</script>